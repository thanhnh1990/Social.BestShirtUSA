#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Social.BestShirtUSA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Money")]
	public partial class mmoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertPosting(Posting instance);
    partial void UpdatePosting(Posting instance);
    partial void DeletePosting(Posting instance);
    partial void InsertProductCategoryDetail(ProductCategoryDetail instance);
    partial void UpdateProductCategoryDetail(ProductCategoryDetail instance);
    partial void DeleteProductCategoryDetail(ProductCategoryDetail instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductStatus(ProductStatus instance);
    partial void UpdateProductStatus(ProductStatus instance);
    partial void DeleteProductStatus(ProductStatus instance);
    partial void InsertProductType(ProductType instance);
    partial void UpdateProductType(ProductType instance);
    partial void DeleteProductType(ProductType instance);
    #endregion
		
		public mmoDataContext() : 
				base(global::Shirts.Properties.Settings.Default.MoneyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public mmoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public mmoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public mmoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public mmoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Posting> Postings
		{
			get
			{
				return this.GetTable<Posting>();
			}
		}
		
		public System.Data.Linq.Table<ProductCategoryDetail> ProductCategoryDetails
		{
			get
			{
				return this.GetTable<ProductCategoryDetail>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductStatus> ProductStatus
		{
			get
			{
				return this.GetTable<ProductStatus>();
			}
		}
		
		public System.Data.Linq.Table<ProductType> ProductTypes
		{
			get
			{
				return this.GetTable<ProductType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Site_Id;
		
		private System.Nullable<int> _Id_Source;
		
		private System.Nullable<int> _IsParent;
		
		private System.Nullable<int> _Parent_Id;
		
		private string _Name;
		
		private string _Slug;
		
		private string _Description;
		
		private string _Image;
		
		private System.Nullable<int> _IsActive;
		
		private System.Nullable<int> _LoadType;
		
		private EntitySet<Category> _Categories;
		
		private EntitySet<ProductCategoryDetail> _ProductCategoryDetails;
		
		private EntityRef<Category> _Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSite_IdChanging(System.Nullable<int> value);
    partial void OnSite_IdChanged();
    partial void OnId_SourceChanging(System.Nullable<int> value);
    partial void OnId_SourceChanged();
    partial void OnIsParentChanging(System.Nullable<int> value);
    partial void OnIsParentChanged();
    partial void OnParent_IdChanging(System.Nullable<int> value);
    partial void OnParent_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    partial void OnLoadTypeChanging(System.Nullable<int> value);
    partial void OnLoadTypeChanged();
    #endregion
		
		public Category()
		{
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			this._ProductCategoryDetails = new EntitySet<ProductCategoryDetail>(new Action<ProductCategoryDetail>(this.attach_ProductCategoryDetails), new Action<ProductCategoryDetail>(this.detach_ProductCategoryDetails));
			this._Category1 = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_Id", DbType="Int")]
		public System.Nullable<int> Site_Id
		{
			get
			{
				return this._Site_Id;
			}
			set
			{
				if ((this._Site_Id != value))
				{
					this.OnSite_IdChanging(value);
					this.SendPropertyChanging();
					this._Site_Id = value;
					this.SendPropertyChanged("Site_Id");
					this.OnSite_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Source", DbType="Int")]
		public System.Nullable<int> Id_Source
		{
			get
			{
				return this._Id_Source;
			}
			set
			{
				if ((this._Id_Source != value))
				{
					this.OnId_SourceChanging(value);
					this.SendPropertyChanging();
					this._Id_Source = value;
					this.SendPropertyChanged("Id_Source");
					this.OnId_SourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsParent", DbType="Int")]
		public System.Nullable<int> IsParent
		{
			get
			{
				return this._IsParent;
			}
			set
			{
				if ((this._IsParent != value))
				{
					this.OnIsParentChanging(value);
					this.SendPropertyChanging();
					this._IsParent = value;
					this.SendPropertyChanged("IsParent");
					this.OnIsParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_Id", DbType="Int")]
		public System.Nullable<int> Parent_Id
		{
			get
			{
				return this._Parent_Id;
			}
			set
			{
				if ((this._Parent_Id != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParent_IdChanging(value);
					this.SendPropertyChanging();
					this._Parent_Id = value;
					this.SendPropertyChanged("Parent_Id");
					this.OnParent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(500)")]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(500)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadType", DbType="Int")]
		public System.Nullable<int> LoadType
		{
			get
			{
				return this._LoadType;
			}
			set
			{
				if ((this._LoadType != value))
				{
					this.OnLoadTypeChanging(value);
					this.SendPropertyChanging();
					this._LoadType = value;
					this.SendPropertyChanged("LoadType");
					this.OnLoadTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Categories", ThisKey="Id", OtherKey="Parent_Id")]
		public EntitySet<Category> Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_ProductCategoryDetail", Storage="_ProductCategoryDetails", ThisKey="Id", OtherKey="Category_Id")]
		public EntitySet<ProductCategoryDetail> ProductCategoryDetails
		{
			get
			{
				return this._ProductCategoryDetails;
			}
			set
			{
				this._ProductCategoryDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Category1", ThisKey="Parent_Id", OtherKey="Id", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._Parent_Id = value.Id;
					}
					else
					{
						this._Parent_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
		
		private void attach_ProductCategoryDetails(ProductCategoryDetail entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_ProductCategoryDetails(ProductCategoryDetail entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Posting")]
	public partial class Posting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Product_Id;
		
		private System.Nullable<int> _Source_Id;
		
		private System.Nullable<int> _Site_id;
		
		private EntityRef<ProductCategoryDetail> _ProductCategoryDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProduct_IdChanging(System.Nullable<int> value);
    partial void OnProduct_IdChanged();
    partial void OnSource_IdChanging(System.Nullable<int> value);
    partial void OnSource_IdChanged();
    partial void OnSite_idChanging(System.Nullable<int> value);
    partial void OnSite_idChanged();
    #endregion
		
		public Posting()
		{
			this._ProductCategoryDetail = default(EntityRef<ProductCategoryDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int")]
		public System.Nullable<int> Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._ProductCategoryDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_Id", DbType="Int")]
		public System.Nullable<int> Source_Id
		{
			get
			{
				return this._Source_Id;
			}
			set
			{
				if ((this._Source_Id != value))
				{
					this.OnSource_IdChanging(value);
					this.SendPropertyChanging();
					this._Source_Id = value;
					this.SendPropertyChanged("Source_Id");
					this.OnSource_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site_id", DbType="Int")]
		public System.Nullable<int> Site_id
		{
			get
			{
				return this._Site_id;
			}
			set
			{
				if ((this._Site_id != value))
				{
					this.OnSite_idChanging(value);
					this.SendPropertyChanging();
					this._Site_id = value;
					this.SendPropertyChanged("Site_id");
					this.OnSite_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategoryDetail_Posting", Storage="_ProductCategoryDetail", ThisKey="Product_Id", OtherKey="Id", IsForeignKey=true)]
		public ProductCategoryDetail ProductCategoryDetail
		{
			get
			{
				return this._ProductCategoryDetail.Entity;
			}
			set
			{
				ProductCategoryDetail previousValue = this._ProductCategoryDetail.Entity;
				if (((previousValue != value) 
							|| (this._ProductCategoryDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCategoryDetail.Entity = null;
						previousValue.Postings.Remove(this);
					}
					this._ProductCategoryDetail.Entity = value;
					if ((value != null))
					{
						value.Postings.Add(this);
						this._Product_Id = value.Id;
					}
					else
					{
						this._Product_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCategoryDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCategoryDetail")]
	public partial class ProductCategoryDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<long> _Product_Id;
		
		private System.Nullable<int> _Category_Id;
		
		private EntitySet<Posting> _Postings;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProduct_IdChanging(System.Nullable<long> value);
    partial void OnProduct_IdChanged();
    partial void OnCategory_IdChanging(System.Nullable<int> value);
    partial void OnCategory_IdChanged();
    #endregion
		
		public ProductCategoryDetail()
		{
			this._Postings = new EntitySet<Posting>(new Action<Posting>(this.attach_Postings), new Action<Posting>(this.detach_Postings));
			this._Category = default(EntityRef<Category>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="BigInt")]
		public System.Nullable<long> Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Id", DbType="Int")]
		public System.Nullable<int> Category_Id
		{
			get
			{
				return this._Category_Id;
			}
			set
			{
				if ((this._Category_Id != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategory_IdChanging(value);
					this.SendPropertyChanging();
					this._Category_Id = value;
					this.SendPropertyChanged("Category_Id");
					this.OnCategory_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategoryDetail_Posting", Storage="_Postings", ThisKey="Id", OtherKey="Product_Id")]
		public EntitySet<Posting> Postings
		{
			get
			{
				return this._Postings;
			}
			set
			{
				this._Postings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_ProductCategoryDetail", Storage="_Category", ThisKey="Category_Id", OtherKey="Id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.ProductCategoryDetails.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.ProductCategoryDetails.Add(this);
						this._Category_Id = value.Id;
					}
					else
					{
						this._Category_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductCategoryDetail", Storage="_Product", ThisKey="Product_Id", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductCategoryDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductCategoryDetails.Add(this);
						this._Product_Id = value.Id;
					}
					else
					{
						this._Product_Id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Postings(Posting entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategoryDetail = this;
		}
		
		private void detach_Postings(Posting entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategoryDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Sku;
		
		private string _Name;
		
		private string _Description;
		
		private int _Source_Id;
		
		private System.Nullable<decimal> _Price;
		
		private string _Group_Id;
		
		private System.Nullable<int> _ProductTypeId;
		
		private string _Url_Name;
		
		private string _Url_Source;
		
		private string _Image;
		
		private string _Keywords;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntitySet<ProductCategoryDetail> _ProductCategoryDetails;
		
		private EntitySet<ProductStatus> _ProductStatus;
		
		private EntityRef<ProductType> _ProductType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSkuChanging(string value);
    partial void OnSkuChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSource_IdChanging(int value);
    partial void OnSource_IdChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnGroup_IdChanging(string value);
    partial void OnGroup_IdChanged();
    partial void OnProductTypeIdChanging(System.Nullable<int> value);
    partial void OnProductTypeIdChanged();
    partial void OnUrl_NameChanging(string value);
    partial void OnUrl_NameChanged();
    partial void OnUrl_SourceChanging(string value);
    partial void OnUrl_SourceChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Product()
		{
			this._ProductCategoryDetails = new EntitySet<ProductCategoryDetail>(new Action<ProductCategoryDetail>(this.attach_ProductCategoryDetails), new Action<ProductCategoryDetail>(this.detach_ProductCategoryDetails));
			this._ProductStatus = new EntitySet<ProductStatus>(new Action<ProductStatus>(this.attach_ProductStatus), new Action<ProductStatus>(this.detach_ProductStatus));
			this._ProductType = default(EntityRef<ProductType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sku", DbType="NVarChar(50)")]
		public string Sku
		{
			get
			{
				return this._Sku;
			}
			set
			{
				if ((this._Sku != value))
				{
					this.OnSkuChanging(value);
					this.SendPropertyChanging();
					this._Sku = value;
					this.SendPropertyChanged("Sku");
					this.OnSkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_Id", DbType="Int NOT NULL")]
		public int Source_Id
		{
			get
			{
				return this._Source_Id;
			}
			set
			{
				if ((this._Source_Id != value))
				{
					this.OnSource_IdChanging(value);
					this.SendPropertyChanging();
					this._Source_Id = value;
					this.SendPropertyChanged("Source_Id");
					this.OnSource_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_Id", DbType="NVarChar(50)")]
		public string Group_Id
		{
			get
			{
				return this._Group_Id;
			}
			set
			{
				if ((this._Group_Id != value))
				{
					this.OnGroup_IdChanging(value);
					this.SendPropertyChanging();
					this._Group_Id = value;
					this.SendPropertyChanged("Group_Id");
					this.OnGroup_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeId", DbType="Int")]
		public System.Nullable<int> ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					if (this._ProductType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeId = value;
					this.SendPropertyChanged("ProductTypeId");
					this.OnProductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url_Name", DbType="NVarChar(500)")]
		public string Url_Name
		{
			get
			{
				return this._Url_Name;
			}
			set
			{
				if ((this._Url_Name != value))
				{
					this.OnUrl_NameChanging(value);
					this.SendPropertyChanging();
					this._Url_Name = value;
					this.SendPropertyChanged("Url_Name");
					this.OnUrl_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url_Source", DbType="NVarChar(500)")]
		public string Url_Source
		{
			get
			{
				return this._Url_Source;
			}
			set
			{
				if ((this._Url_Source != value))
				{
					this.OnUrl_SourceChanging(value);
					this.SendPropertyChanging();
					this._Url_Source = value;
					this.SendPropertyChanged("Url_Source");
					this.OnUrl_SourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(100)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(150)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductCategoryDetail", Storage="_ProductCategoryDetails", ThisKey="Id", OtherKey="Product_Id")]
		public EntitySet<ProductCategoryDetail> ProductCategoryDetails
		{
			get
			{
				return this._ProductCategoryDetails;
			}
			set
			{
				this._ProductCategoryDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductStatus", Storage="_ProductStatus", ThisKey="Id", OtherKey="Product_Id")]
		public EntitySet<ProductStatus> ProductStatus
		{
			get
			{
				return this._ProductStatus;
			}
			set
			{
				this._ProductStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_ProductType", ThisKey="ProductTypeId", OtherKey="Id", IsForeignKey=true)]
		public ProductType ProductType
		{
			get
			{
				return this._ProductType.Entity;
			}
			set
			{
				ProductType previousValue = this._ProductType.Entity;
				if (((previousValue != value) 
							|| (this._ProductType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductType.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductType.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProductTypeId = value.Id;
					}
					else
					{
						this._ProductTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCategoryDetails(ProductCategoryDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductCategoryDetails(ProductCategoryDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductStatus(ProductStatus entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductStatus(ProductStatus entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductStatus")]
	public partial class ProductStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<long> _Product_Id;
		
		private string _Website;
		
		private System.Nullable<int> _Is_Post;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProduct_IdChanging(System.Nullable<long> value);
    partial void OnProduct_IdChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnIs_PostChanging(System.Nullable<int> value);
    partial void OnIs_PostChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public ProductStatus()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="BigInt")]
		public System.Nullable<long> Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(100)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Post", DbType="Int")]
		public System.Nullable<int> Is_Post
		{
			get
			{
				return this._Is_Post;
			}
			set
			{
				if ((this._Is_Post != value))
				{
					this.OnIs_PostChanging(value);
					this.SendPropertyChanging();
					this._Is_Post = value;
					this.SendPropertyChanged("Is_Post");
					this.OnIs_PostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductStatus", Storage="_Product", ThisKey="Product_Id", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductStatus.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductStatus.Add(this);
						this._Product_Id = value.Id;
					}
					else
					{
						this._Product_Id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductType")]
	public partial class ProductType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Slug;
		
		private string _Description;
		
		private System.Nullable<int> _Source_Id;
		
		private System.Nullable<int> _Is_Active;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSource_IdChanging(System.Nullable<int> value);
    partial void OnSource_IdChanged();
    partial void OnIs_ActiveChanging(System.Nullable<int> value);
    partial void OnIs_ActiveChanged();
    #endregion
		
		public ProductType()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(50)")]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_Id", DbType="Int")]
		public System.Nullable<int> Source_Id
		{
			get
			{
				return this._Source_Id;
			}
			set
			{
				if ((this._Source_Id != value))
				{
					this.OnSource_IdChanging(value);
					this.SendPropertyChanging();
					this._Source_Id = value;
					this.SendPropertyChanged("Source_Id");
					this.OnSource_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Int")]
		public System.Nullable<int> Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_Products", ThisKey="Id", OtherKey="ProductTypeId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = null;
		}
	}
}
#pragma warning restore 1591
